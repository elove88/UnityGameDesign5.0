イベントスクリプトファイル書式・コマンドリスト
2013/01/20


【基本書式】

	[(イベント名)]
	Begin
		(コマンド)[(Tab×n)(パラメータ)]×n  ;; (コメント)
	End

	※ スクリプトファイルは UTF-8 エンコーディングで記述する必要がある。バイトオーダーマーク (BOM) の有無は任意である。
	※ Begin、End、および各コマンド名は大文字小文字を区別しないが、半角文字にする必要がある。コマンドのパラメータは基本的に大文字小文字を区別する。
	※ イベント名はそのあと最初に現れるイベントに対する名前を指定する。省略することもできるが、その場合は evaluate-event コマンドのイベントに指定できない。
	※ Begin～End の外に書かれた文字は、イベント名設定を除いてすべて無視される。
	※ Begin～End 内部 (Begin行, End 行を含む) はセミコロン 2 つに続けてコメントを記述できる。
	※ 行頭インデントは自由。スペース (半角/全角) でもタブでも OK。
	※ コマンドとパラメータ、パラメータどうしはタブで区切る。タブはいくつあってもよいがスペースを混入させてはいけない。
	※ target、prologue、condition、continue、evaluate-event は「特殊コマンド」で、Begin～End 内部のどこに書いてもよい。
	※ そのほかのコマンドは、上に書いたものから順番に実行されるため、記述順序に注意する必要がある。
	※ パラメータにオブジェクト名を指定する場合は、Unity のエディタ上でインスペクタに BaseObject クラスもしくはその派生クラスをアタッチしていなければならない。

【target (特殊コマンド)】

	target (Tab) (オブジェクト名)
	イベントの発生対象オブジェクトを追加する

	※ target で指定されたオブジェクトが接触したときにそのイベントが発生対象となる。
	※ オブジェクト名は大文字小文字を区別する。
	※ オブジェクト名の代わりにワイルドカードとして半角のアスタリスク * を指定でき、どのオブジェクトも発生対象とすることができる。
	※ 条件指定 condition 次第では、target の指定が一致していてもイベントが発生しないこともある。
	※ target は 3 つ以上のオブジェクトを指定することもできる。1 つだけを指定するとそのイベントの記述自体が無視される。

【prologue (特殊コマンド)】

	prologue
	プロローグイベント (オブジェクトの接触ではなくスクリプトを読み込んだときに実行させるイベント) にする

	※ イベントに prologue を指定して「プロローグイベント」にすると、スクリプトを読み込んだときに評価・実行される特殊なイベントとなる。
	※ プロローグイベントは target の指定を置き換えるものであり、prologue が指定されていると target はすべて無効となる。
	※ condition や continue の記述は有効である。
	※ EventManager の Initial Deactive Objects を使わず、プロローグイベントでオブジェクトを非表示にすることもできるが、ゲーム開始時に一瞬見えてしまう可能性がある。

【condition (特殊コマンド)】

	condition (Tab) (オブジェクト名) (Tab) (変数名) (Tab) (値)
	イベントの発生条件を追加する

	※ target で指定したオブジェクトが接触したときに発生するイベントに条件を追加する。
	※ ゲーム内変数の値が、ここで指定した値と等しいときにイベントが発生する。「ゲーム内変数」については set コマンドを参照。
	※ オブジェクト名、変数名ともに大文字小文字を区別する。
	※ condition で指定したゲーム内変数が未定義のとき (set されていないとき) は、"0" という文字列と等しいと見なされる。
	※ condition は指定しなくてもよい。また 2 つ以上指定することもでき、そのときはすべての condition を満たすとイベントが発生する。

【continue (特殊コマンド)】

	continue
	イベントを継続評価する

	※ 本来イベントは target もしくは prologue、および condition が一致しているものを 1 つだけ実行する。
	※ ただし continue と書かれたイベントが実行された場合に限り、それ以降に記述されたイベントも実行しようとする。
	※ 継続“評価”となっているように、target の対象チェックやプロローグイベントのチェック、condition の条件チェックは行われるため、結局実行されないこともある。

【evaluate-event (特殊コマンド)】

	evaluate-event (Tab) (イベント名)
	イベントの終了時に指定したイベントを連続して実行する

	※ イベント名は大文字小文字を区別する。
	※ このコマンドが書かれたイベントが終了すると、指定したイベントを連続して実行する。
	※ イベントを続けて実行できる点は continue コマンドと同様だが、以前のイベントも実行対象にできることが異なる。

【set】

	set (Tab) (オブジェクト名) (Tab) (変数名) (Tab) (値)
	ゲーム内変数に文字列を代入する

	※ このコマンドを使ってオブジェクトそれぞれに名前と、値となる文字列の組を保存することができ、これを「ゲーム内変数」とよぶ。
	※ オブジェクト名、変数名ともに大文字小文字を区別する。
	※ すでに定義されているゲーム内変数は上書きされる。
	※ このコマンドはすぐに実行が完了する。

【move】

	move (Tab) (オブジェクト名) (Tab) (オブジェクト名) (Tab) (秒数)
	オブジェクトを移動する

	※ 1 つ目に指定したオブジェクトを、指定した秒数の時間を使って、2 つ目に指定したオブジェクトへ移動させる。
	※ BaseObject クラスをアタッチした空のオブジェクトを使うことで、見かけ上ほかのオブジェクトがない位置へ移動させることも可能である。
	※ このコマンドは指定の秒数が経過するまで実行が継続する。

【hide】

	hide (Tab) (オブジェクト名)
	指定されたオブジェクトを非表示にする

	※ オブジェクト名は大文字小文字を区別する。
	※ このコマンドはすぐに実行が完了する。

【show】

	show (Tab) (オブジェクト名)
	指定されたオブジェクトを表示する

	※ オブジェクト名は大文字小文字を区別する。
	※ このコマンドはすぐに実行が完了する。
	※ ゲームスタート時点からオブジェクトを非表示にする場合には、EventManager の Initial Deactive Objects にオブジェクトを登録しておく必要がある。

【text】

	text (Tab) (文字列) [ (Tab) (文字列) ]×n
	地の文を表示する

	※ 画面下部中央に地の文 (語り) を表示する。タブで区切ることで複数行の表示ができる。
	※ このコマンドは実行後、ユーザがマウスをクリックするまで処理を一時的に停止し、クリック直後に地の文を消去する。
	※ ただし次のコマンドが choice のときのみ、処理の一時停止と地の文の消去が行われず、すぐに実行が完了する。

【dialog】

	dialog (Tab) (オブジェクト名) (Tab) (文字列) [ (Tab) (文字列) ]×n
	会話文を表示する

	※ 指定されたオブジェクトの近辺に吹き出しによる会話文を表示する。オブジェクト名は大文字小文字を区別する。
	※ 吹き出しの表示位置は自動的に計算されるため、スクリプトから指定することはできない。
	※ text コマンドと同じく、タブで区切ることで複数行の表示ができる。
	※ このコマンドは実行後、ユーザがマウスをクリックするまで処理を一時的に停止し、クリック直後に会話文を消去する。
	※ ただし次のコマンドが choice のときのみ、処理の一時停止と会話文の消去が行われず、すぐに実行が完了する。

【choice】

	choice (Tab) (オブジェクト名) (Tab) (変数名) [ (Tab) (選択肢) ]×n
	選択肢を表示して選んだものに応じてゲーム内変数に値を代入する

	※ オブジェクト名は大文字小文字を区別する。
	※ 選択肢は 1 つ以上指定する必要があり、上から表示される。
	※ 一番上の選択肢を選ぶと 1 が、2 番目の選択肢は 2、3 番目は 3 ... が指定したゲーム内変数に代入される。
	※ 値の代入が 1 から始まるのは、まだ選択肢を選んでいないときにゲーム内変数を condition 等で参照すると未定義、つまり 0 になることがあるためである。
	※ 選択肢に応じた分岐は continue を使って、選択肢を表示するイベント以降に、値を代入したゲーム内変数を condition にするイベントを記述する。
	※ このコマンドは、ユーザが選択肢をクリックするまで処理を一時的に停止し、クリック直後に選択肢を消去する。
	※ その際、text コマンド、dialog コマンドから引き続き表示させていた地の文、会話文があれば、これも消去する。

【play】

	play (Tab) (サウンド名) [ (Tab) loop ]
	サウンドを再生する

	※ サウンド名は大文字小文字を区別する。
	※ 指定できるサウンド名は、SoundManager クラスの m_audioClips に指定したサウンドのみである。
	※ サウンドはワンショット再生で、再生を開始すると、すべて再生し終わるのを待たずにすぐに実行が完了する。
	※ ただしサウンド名の後に loop を指定すると、ループ再生となる。

【fadeout】

	fadeout (Tab) (秒数)
	フェードアウトを行う

	※ 指定した秒数の時間を使って画面を徐々に暗転させる。
	※ このコマンドは指定の秒数が経過するまで実行が継続する。

【fadein】

	fadein (Tab) (時間)
	フェードインを行う

	※ 暗転した状態で、指定した秒数の時間を使って画面を徐々に通常の状態へ戻す。
	※ このコマンドは指定の秒数が経過するまで実行が継続する。

【load】

	load (Tab) (ファイル名) [ (Tab) (ファイル名) ]×n
	スクリプトを読み込んでイベントを入れ替える

	※ ゲーム開始時は GlobalParam クラスの startScripts で指定したスクリプトからイベントの情報を読み込む。
	※ このコマンドは、指定されたスクリプトからイベントの情報を読み直し、元のイベントの情報と入れ替える。
	※ ファイル名の大文字小文字を区別するかどうかは、実行している環境に依存するが、区別しないのは Windows くらいなので区別すると考えてよい。
	※ ファイルは複数指定できるが、イベントの情報を後ろに追加していく形になるため、先に指定したファイルに書かれたイベントが優先される。
	※ イベント情報の入れ替えが行われるのは、すべてのイベントの評価・実行が済んでからとなる。
	※ よってこのコマンドを含むイベントに continue を指定して継続評価を行うことも可能である。
	※ イベントの評価・実行中に load コマンドが複数回実行された場合は、後に実行されたほうが情報を上書きする。
	※ このコマンドはすぐに実行が完了する。

【call-event】

	call-event (Tab) (イベント名)
	コマンドが実行されるタイミングで強引に別のイベントを実行する

	※ イベント名は大文字小文字を区別する。
	※ このコマンドが実行された段階で、現在実行中のイベントを打ち切り、指定した別のイベントを実行する。
	※ このコマンドはすぐに実行が完了する。
	※ イベントを続けて実行できる点は continue コマンドと同様だが、以前のイベントも実行対象にできること、評価が行われず強制的に実行されることが異なる。

【message】

	message (Tab) (オブジェクト名) (Tab) (メッセージの種類) [ (Tab) (パラメータ) ]×n
	オブジェクトにメッセージを送信して固有の処理を行わせる

	※ オブジェクト名は大文字小文字を区別する。メッセージの種類が大文字小文字を区別するかは実装に依存する。
	※ オブジェクト固有の処理を行わせるために、オブジェクトにメッセージとパラメータを送信する。
	※ このコマンドを実行するオブジェクトは、BaseObject を継承し、UpdateMessage メソッドをオーバーライドした派生クラスのコンポーネントをアタッチしている必要がある。
